name: Run Benchmarks

# Run this action when triggered manually through GitHub UI.
on: [workflow_dispatch]

permissions:
  # deployments permission to deploy GitHub pages website
  deployments: write
  # contents permission to update benchmark contents in gh-pages branch
  contents: write

jobs:

  chc-comp-benchmark:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ci_index: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]
        ci_total: [20]
        repo: ['chc-comp22-benchmarks', 'chc-comp23-benchmarks']
        include:
          - repo: 'chc-comp22-benchmarks'
            directory: 'LIA-Lin'
            mode: reachability
            engine: adcl
            format: horn

          - repo: 'chc-comp23-benchmarks'
            directory: 'LIA-lin'
            mode: reachability
            engine: adcl
            format: horn
    steps:
      - name: Checkout Benchmark Repository
        uses: actions/checkout@v4
        with:
          repository: chc-comp/${{ matrix.repo }}
          sparse-checkout: ${{ matrix.directory }}

      - name: Unpack
        run: gunzip ${{ matrix.directory }}/*.gz

      # retrieve previously built binary
      - name: Import LoAT Binary
        id: download-artifact
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: build-loat.yml
          name: loat-static
          path: /usr/local/bin/
     
      - name: Run Benchmark
        run: |
          # function to run a single benchmark
          function benchmark() {
            filename=$1
            printf "running ${filename} ... "
            start=`date +%s`

            set +e
            result=$(timeout 20 loat-static --mode ${{ matrix.mode }} --format ${{ matrix.format }} --proof-level 0 --engine ${{ matrix.engine }} "${filename}")
            exit_status=$?
            set -e

            end=`date +%s`
            runtime=$((end-start))

            if [[ $exit_status -eq 0 ]]; then
              result=$(echo "$result" | head -n 1)
            elif [[ $exit_status -eq 124 ]]; then
              result="timeout"
            else
              result="error"
            fi

            printf "${result} after ${runtime}s\n"

            echo ${result} > ${filename}.res
          }

          # make 'benchmark' available for 'parallel'
          export -f benchmark

          # permissions are not preserved for artifacts:
          chmod +x /usr/local/bin/loat-static

          cd ${{ matrix.directory }}

          # remove benchmarks that are executed by other workers
          i=0
          for filename in *.smt2; do
            if [[ $(( i % CI_TOTAL )) -ne $CI_INDEX ]]; then
              rm ${filename}
            fi
            i=$(( i+1 ))
          done

          # execute benchmarks in parallel
          parallel benchmark ::: *.smt2
        env:
          CI_TOTAL: ${{ matrix.ci_total }}
          CI_INDEX: ${{ matrix.ci_index }}

      - name: Export Benchmark Results
        uses: actions/upload-artifact@master
        with:
          name: ${{ matrix.repo }}-${{ matrix.ci_index }}-res
          path: ${{ matrix.directory }}/*.res

  finalize-benchmark-results:
    needs: [chc-comp-benchmark]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo: ['chc-comp22-benchmarks', 'chc-comp23-benchmarks']
    steps:
      - name: Download Benchmark Results
        id: download-benchmark-results
        uses: actions/download-artifact@v4
        with:
          pattern: ${{ matrix.repo }}*
      - name: Merge Benchmark Results
        id: merge-benchmark-results
        run: |
          declare -A results
          for filename in ${{ matrix.repo }}*/*.res; do
            benchmark=$(basename "$filename" .res)
            res=$(cat "$filename")
            if [[ -n "${results["$res"]}" ]]; then
                results["$res"]=$(( $results["$res"]+1 ))
            else
                results["$res"]=1
            fi
            echo "$benchmark: $res" >> ${{ matrix.repo }}.txt
          done
          sort -o ${{ matrix.repo }}.txt ${{ matrix.repo }}.txt
          echo "[" >> output.txt
          for res in ${!results[@]}; do
              echo "{\"name\": \"${{ matrix.repo }} ${res}\", \"unit\": \"number\", \"value\": \"${results[${res}]}\"}," >> output.txt
          done
          echo "]" >> output.txt
      - name: Upload Benchmark Results
        id: upload-benchmark-results
        uses: actions/upload-artifact@master
        with:
          name: ${{ matrix.repo }}.txt
          path: ${{ matrix.repo }}.txt
      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: LoAT Benchmarks
          # What benchmark tool the output.txt came from
          tool: 'customBiggerIsBetter'
          # Where the output from the benchmark tool is stored
          output-file-path: output.txt
          # Access token to deploy GitHub Pages branch
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # Push and deploy GitHub pages branch automatically
          auto-push: true
          gh-pages-branch: web
          benchmark-data-dir-path: /docs/dev/bench

